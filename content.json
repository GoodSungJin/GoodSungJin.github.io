{"pages":[],"posts":[{"title":"algorithm_codewars_directions-reduction","text":"","link":"/2019/06/07/algorithm-codewars-directions-reduction/"},{"title":"[Codewars] Consecutive strings","text":"(6kyu) Consecutive strings 설명 : 배열의 원소로 임의의 문자열과, 정수 k 가 들어온다. 배열의 원소들을 k개씩 잘라 합치고, 길이를 비교해 제일 긴 값을 반환한다. 12345678910111213141516171819202122232425function longestConsec(strarr, k) { var len = strarr.length; var result = []; var comp; if(len == 0 || k &gt; len || k &lt;= 0){ return ''; } for(let i = 0; i &lt; k; i++){ result += strarr[i]; } for(let i = 0; i &lt; len-k+1; i++){ for(let j = 0; j &lt; k; j++){ comp += strarr[i+j]; } if(result.length &lt; comp.length){ result = comp; } comp = []; } return result;} 내가 생각한 핵심 : 문제를 풀기 전까지는 몰랐는데 풀면서 확인해보니 배열의 문자열을 comp에 더해주니까 하나의 문자열로 합쳐졌다. 이런 상황은 생각하고 풀지 않았는데 풀어보니 암묵적 형변환이 일어나서 오늘 배운 내용이 생각나면서 신기했다.","link":"/2019/05/07/algorithm-codewars-consecutive-strings/"},{"title":"algorithm_codewars_double_cola","text":"","link":"/2019/06/07/algorithm-codewars-double-cola/"},{"title":"algorithm_codewars_exes-and-ohs","text":"","link":"/2019/06/07/algorithm-codewars-exes-and-ohs/"},{"title":"algorithm_codewars_multiples-of-3-or-5","text":"","link":"/2019/06/07/algorithm-codewars-multiples-of-3-or-5/"},{"title":"algorithm_codewars_persistent-bugger","text":"","link":"/2019/06/07/algorithm-codewars-persistent-bugger/"},{"title":"algorithm_codewars_playing-with-digits","text":"","link":"/2019/06/07/algorithm-codewars-playing-with-digits/"},{"title":"algorithm_codewars_take_a_number","text":"","link":"/2019/06/07/algorithm-codewars-take-a-number/"},{"title":"algorithm_leetcode_longest-common-prefix","text":"","link":"/2019/06/07/algorithm-leetcode-longest-common-prefix/"},{"title":"algorithm_leetcode_reverse-integer","text":"","link":"/2019/06/07/algorithm-leetcode-reverse-integer/"},{"title":"algorithm_leetcode_two-sum","text":"","link":"/2019/06/07/algorithm-leetcode-two-sum/"},{"title":"웹 사이트의 구조, 웹 접근성과 웹 표준","text":"1. 웹사이트의 구조 HTML(Hyper Text Markup Language)구조를 잡는다. (건강한 신체) CSS(Casecade Style Sheets)html 요소들을 꾸민다. (화려한 스타일) Javascript정적인 페이지를 동적으로 변화시켜준다. (스마트한 두뇌) 2. 웹 접근성과 웹 표준2.1. 웹 표준(Web Standards) W3C (World Wide Consortium)에서 정의하는 기술 표준을 또는 규격을 말한다. 웹 표준의 궁극적인 목적은 웹사이트에 접속한 사용자가 어떠한 운영체제나 브라우저를 사용하더라도 동일한 결과를 보이게 하는 것이다. 2.1.1. 웹 표준이 되는 과정 Working Draft(WD) : 초안 Candidate Recommendation(CR) : 후보 권고안 Proposed Recommendation(PR) : 제안권고안 W3C Recommendation(REC) : 권고안 2.2. 웹 접근성(Web Accessibility)장애인, 고령자 등 모든 사용자가 어떠한 기술이나 환경에서도 전문적인 능력 없이 웹사이트에서 제공하는 모든 정보를 동등하게 접근하고 이해할 수 있는 권리입니다. 장애는 볼수없는것이 아니라 보는 방법이 다를뿐 (서울대 이상묵교수님) 2.2.1. 신체적인 접근성(장애) 시력장애, 청각장애, 지체장애, 뇌병변장애 그 외 신체적 장애 2.2.2. 환경에 대한 이해 다양한 Platform Cross Browsing SEO(Search Engine Optimization) 저사양 또는 저속회선 3. HTML(HyperText Markup Language)HTML은 웹 페이지 제작을 위한 마크업 언어다. 3.1. 의미론적 마크업(Sementic Markup)HTML 태그는 의미를 가진 태그와 의미를 가지지 않은 태그로 나뉘어져있다. 웹페이지에서 같은 모양으로 출력된다고 해도, 실제로 가지고 있는 의미는 서로 다를 수 있다. 예를 들어 태그를 안쓰고도 제목 모양의 스타일링을 할 수는 있지만 그것은 ‘표현’ 영역에 해당하고 내용-구조를 담당하는 HTML의 역할을 다 했다고 하기 어려운 것이다. 3.2. 검색엔진최적화(SEO, Search Engine Optimization)검색엔진최적화(Search Engine Optimization)란, 웹사이트의 HTML 코드에서 정보를 모아 검색 키워드에 맞는 적절한 웹사이트를 보여주기 위한 것이다. 따라서 HTML의 요소들을 가지고 해당 웹페이지의 내용을 파악하고 그것이 검색엔진에 노출될 수 있도록 하기 위해서 시멘틱한 마크업이 필요하다.","link":"/2019/04/01/til-20190401/"},{"title":"css의 상속, 겹침, 우선순위, layout","text":"1. CSS(Casecade Style Sheets)1.1. 가장 중요한 3가지 상속layout 프로퍼티는 상속받지 않고, decoration 프로퍼티만 상속받는다. 겹침가장 마지막에 선언된 스타일이 우선순위가 높다. 우선순위선택자 각각의 우선순위를 구별할 수 있어야한다. 선택자 점수 태그 (tag) 1점 클래스 (class) 10점 아이디 (id) 100점 1.2. Layout 1.2.1.display block view포트를 기준으로 한줄을 다 차지하여, 줄 바꿈이 일어나고 크기를 지정할 수 있다. inline 콘텐츠의 크기에 맞게 사이즈가 조절되어, 줄 바꿈이 일어나지 않고, 크기조절이 불가하다. inline-block 혼합된 형태로 크기조절이 가능하고, 줄 바꿈이 일어나지 않는다. flex 다른 속성들과 다르게 유연함을 가지고 있다. grid 세로 열과 가로 행의 테이블형식으로 만들어 위치를 마음대로 이동시킬 수 있다. 1234567.layout { display: block; display: inline; display: inline-block; display: flex; display: grid;} 1.2.2. position static 모든 태그의 기본 상태이고 왼쪽에서 오른쪽, 위에서 아래로 정렬된다. relative 선택된 요소를 기준으로 top, right, bottom, right를 사용하여 위치를 움직일 수 있다. absolute static 속성이 아닌 부모를 기준으로 top, right, bottom, right를 사용하여 움직일 수 있다. fixed 상단의 메뉴바에 많이 쓰이는 속성으로, 고정된 자리를 가진다. 123456.layout { position: static; position: relative; position: absolute; position: fixed;} 1.2.3. float left 일반적인 흐름에서 벗어나 공중에 붕 떠있는 형태로 왼쪽 정렬을 한다. right 일반적인 흐름에서 벗어나 공중에 붕 떠있는 형태로 오른쪽 정렬을 한다. 1234.layout { float: left; float: right;} 2. emmet모든 에디터에 제공되는 자동완성 기능이다.ex) ul.member&gt;li*5&gt;a[href=&quot;#&quot;] 123456789&lt;!-- ul.member&gt;li*5&gt;a[href=\"#\"] --&gt;&lt;ul class=\"member\"&gt; &lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href=\"#\"&gt;&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;","link":"/2019/04/02/til-20190402/"},{"title":"css프로퍼티, 애니메이션","text":"1. CSS 프로퍼티 1.1. linear-gradient() 배경 및 색깔에 그라데이션이 필요할 때 사용한다. linear-gradient 앞쪽에 색을 선언하면 그라데이션이 안먹을 경우 앞에 선언한 컬러가 적용됨 123box{ background: black linear-gradient(to bottom, white 0%, gray 50%, black 100%);} 1.2. white-space스페이스와 탭, 줄바꿈, 자동줄바꿈의 처리 방식을 정할 때 사용한다. normal 자동 줄바꿈 - O, 스페이스및 탭 - 병합 nowrap 자동 줄바꿈 - X, 스페이스및 탭 - 병합 pre 자동 줄바꿈 - X, 스페이스및 탭 - 기본 pre-wrap 자동 줄바꿈 - O, 스페이스및 탭 - 기본 pre-line 자동 줄바꿈 - O, 스페이스및 탭 - 병합 1.3. ::after ::before 다른 선택자의 뒤에 함께 쓰여 원하는 텍스트 및 스타일을 넣거나 지정할 때 사용한다. 가상요소 선택자를 쓸 경우 필수로 content 속성이 필요하다. 123box::after{ content: \"o\";} 2. CSS 애니메이션 2.1. @keyframes정해진 시간분할에 따라 %, from-to 단위로 애니메이션(animation)을 구현하기 위한 것이며 이를 위해 animation 속성 사용 후 keyframe 과 연결하여 애니메이션을 구현한다. 12345678910111213141516171819202122/* % */@keyframes percentage{ 0%{ opacity: 0; } 50%{ opacity: 1; } 100%{ opacity: 0.3; }}/* from-to */@keyframes from-to{ from{ height: 0; } to{ height: 100px; }} 2.2. animation-name어떤 keyframe을 연결할지 지정한다. 2.3. animation-duration애니메이션이 얼마 동안 구현 될지에 대한 시간을 지정한다. 2.4. animation-delay애니메이션을 즉시 재생하지 않고 지정한 시간 동안 지연 후 재생하도록 한다. 2.5. animation-fill-mode애니메이션의 시작/끝 상태를 제어한다. 2.6. animation-iteration-count애니메이션 반복 횟수를 지정한다.(infinite, 무한대) 2.7. animation-timing-function애니메이션이 재생될 때의 시간차에 대한 함수를 지정한다. 2.8. ease, linear, ease-in, ease-out, ease-in-out특정 곡선이 아닌 임의의 시간차를 필요로 할 경우에는 cubic-bezier 함수를 사용한다. 2.9. animation-direction 애니메이션이 어떤 형식으로 반복할지에 대한 반복형식을 지정한다. alternate로 지정하는 경우 from에서 to로 갔다가 다시 to에서 from으로 가도록 한다. animation-direction 속성이 제대로 동작하려면 animation-iteration-count 속성에 반복 횟수가 지정되어 있어야 한다. 2.10. animation-play-state 애니메이션의 재생 상태를 지정한다. paused 값을 사용해 애니메이션을 일시적으로 정지 시킬 수 있다. 1234567891011.box{ animation-name: from-to; animation-duration: 3.3s; animation-delay: 2s; animation-fill-mode: forwards; animation-iteration-count: infinite; animation-timing-function: linear; animation-direction: alternate; animation-play-state: running; height: auto;}","link":"/2019/04/03/til-20190403/"},{"title":"til_20190404","text":"","link":"/2019/06/07/til-20190404/"},{"title":"til_20190405","text":"","link":"/2019/06/07/til-20190405/"},{"title":"til_20190408","text":"","link":"/2019/06/07/til-20190408/"},{"title":"til_20190409","text":"","link":"/2019/06/07/til-20190409/"},{"title":"til_20190410","text":"","link":"/2019/06/07/til-20190410/"},{"title":"til_20190417","text":"","link":"/2019/06/07/til-20190417/"},{"title":"til_20190422","text":"","link":"/2019/06/07/til-20190422/"},{"title":"til_20190423","text":"","link":"/2019/06/07/til-20190423/"},{"title":"til_20190424","text":"","link":"/2019/06/07/til-20190424/"},{"title":"til_20190425","text":"","link":"/2019/06/07/til-20190425/"},{"title":"til_20190426","text":"","link":"/2019/06/07/til-20190426/"},{"title":"프론트엔드와 자바스크립트","text":"1. 프론트엔드 개발자가 웹 퍼블리셔 다른점서버와 관계가 밀접하고 동적으로 웹페이지를 만든다. 2. 웹 어플리케이션과 어플리케이션 2.1. 웹 어플리케이션 브라우져를 이용하여 접속하여, 별도의 프로그램이 필요하지 않다. 웹 브라우져로 구동이 되기 때문에, 웹 브라우져를 잘 알아야한다. 2.2. 어플리케이션 실행파일이 따로 존재해, 다운로드를 받아야한다. 웹 브라우져로 접속이 필요없다. 3. UI(user interface) 애플리케이션을 사용하는 사람(유저)이 애플리케이션과 소통하기 위한 창구(user interface)를 사용하기 좋게 구현한다.(커뮤니케이션) 상태 정보를 서버로 전송하기도 하고, 서버의 데이터를 가져와서 UI에 표시하기도 한다. 4. 초심가자 경험하는 어려움 책이나 수업의 내용이 무슨 말인지 하나도 모르겠다. 주변 개발자의 말을 알아 들을 수 없다. 배경 지식 : 기본적인 CS(컴퓨터공학)지식 + 개념(용어)에 대한 이해 어떻게 만들어야 할 지 감조차 오지 않는다. 문제 해결 능력 : 문제(해결과제)가 무엇인지 알아채는 능력 + Computational thinking(컴퓨터 입장에서 생각) + 알고리즘/자료구조 + 경험 *문제해결능력 = 해결 과제(문제/요구사항)의 명확한 이해 -&gt; 복잡함을 단순하게 분해 -&gt; 자료를 정하고 구분(modelling) -&gt; 순서에 맞게 행위 배열 초심자는 코딩보단, 전문용어를 배우는게 좋다. 4.1. 효율적인 프로그래밍 학습은 없다. 연습을 꾸준히 반복하는 만큼 성장한다. 라이브코딩 감상과 예제 단순 타이핑은 연습이 아니다. 자신의 능력을 살짝 넘어서는 도전을 지속적으로 시도하는 것이 연습니다. 시행차교(a.k.a.삽질)은 “무엇을 알고 무엇을 모르는지”를 알게하는 개발자의 벗이자 선생님이다. 무엇을 모르는지 알았다면 몰랐던 것을 알기위해 “시도하고 실패하는 의식적인 연습을 반복” 한다. 하지만 모르는 것이 너무 많다. 베이스가 되는 것부터 구체적인 목표를 수립하고 학습하고 작은 성취를 반복하자. 수박 겉핥기식 학습도 문제지만 본질에서 벗어난 학습도 문제다. 피드백에 겸손하고 적극적으로 반응하여 행동을 교정하라. 5. 프로그래밍이란? 순서에 맞게 위에서 아래로 실행된다. 5.1. 프로그래밍언어란? 프로그래밍을 하기위한 언어이다. 컴퓨터와 커뮤니케이션을 하기 위한 언어이다. 5.2. HTML &amp; CSS 선언형 프로그래밍 언어이다. 미리 만들어 놓은 태그와 속성을 사용한다. 6. 코딩을 잘한다? 예전 : 메모리가 비싸서 가장 덜 쓰고 성늘을 높히는 것 현재 : 사람이 읽을때 쉽게 읽을 수 있게한다.(가독성을 좋게한다) 7. 개발자와 컴퓨터가 공통으로 알고 있는 언어javascript는 엔진을 통해 컴퓨터에게 언어를 습득하게 한다. 7.1. JavaScript7.1.1. ecmascript(core javascript) + api(환경에 따라 다름) 7.1.2. interpreter language 한줄 한줄 동시통역처럼 컴퓨터에게 바이트 코드를 만들어준다. 예전에는 느렸지만 google의 v8엔진 도입으로 속도가 비약적으로 빨라졌다. 웹브라우저에서 돌아가는 유일한 언어이다.(HTML &amp; CSS 도 같이) 7.1.3. JavaScript를 실행할 수 있는 환경 브라우저 ecmascript + web api(브라우저가 제공한다) 클라이언트 사이드에서 사용한다. node.js 환경 ecmascript + node.js api 서버 사이드에서 사용한다. v8 엔진을 내장한다. 파일 컨트롤이 가능하며, 서버에서 직접 관리가 가능하다. 오늘 알아야 할 것 ecmascript와 javascript가 무엇인가? wep api가 무엇인가?","link":"/2019/04/29/til-20190429/"},{"title":"til_20190430","text":"","link":"/2019/06/07/til-20190430/"},{"title":"til_20190501","text":"","link":"/2019/06/07/til-20190501/"},{"title":"til_20190502","text":"","link":"/2019/06/07/til-20190502/"},{"title":"til_20190503","text":"","link":"/2019/06/07/til-20190503/"},{"title":"til_20190506","text":"","link":"/2019/06/07/til-20190506/"},{"title":"til_20190507","text":"","link":"/2019/06/07/til-20190507/"},{"title":"til_20190508","text":"","link":"/2019/06/07/til-20190508/"},{"title":"til_20190509","text":"","link":"/2019/06/07/til-20190509/"},{"title":"til_20190510","text":"","link":"/2019/06/07/til-20190510/"},{"title":"til_20190513","text":"","link":"/2019/06/07/til-20190513/"},{"title":"this","text":"아침 러버덕 일급객체의 조건은 무엇인가? 변수, 자료구조(객체, 배열 등) 할당할 수 있다. 매개변수에 전달할 수 있다. 함수의 반환값으로 사용할 수 있다. 무명의 리터럴로 생성할 수 있다. 프로토타입 기반 상속의 이점은 무엇인가?메소드의 중복을 제거하여 메모리 낭비를 막을 수 있다. ‘constructor’,‘prototype’, __proto__에 대해 설명해보세요 __proto__ : 인스턴스가 프로토타입에 접근하기 위한 접근자 프로퍼티이다. prototype : 생성자 함수에 접근하기 위한 프로퍼티이다. constructor : 컨스트럭터, 컨스트럭터는 생성자이다. 프로토타입 체인에 대해 설명해보세요 프로퍼티에 접근하기 위해서는 프로토타입 체인을 상위의 프로토타입을 따라 찾는다. 1. thisthis는 자신이 속한 객체를 가리키는 자기 참조 변수이다. this에 바인딩 되는 객체는 함수 호출 방식에 따라 변화하여 결정되고, 태초에 생겼을 때 전역(window)으로 초기화 돼있다. 1.1. 일반 함수 호출일반 함수로 호출된 모든 함수(중첩 함수, 콜백 함수 포함) 내부의 this에는 전역 객체가 바인딩된다. 12345678function foo() { this; // window function bar() { this; // window } bar();}foo(); 하지만 메소드 내에서 정의한 중첩함수, 콜백함수에 this가 전역 객체를 바인딩하는 것은 헬퍼함수로서의 문제가 있다. 때문에 this를 외부한수로 바인딩 해주어야 하는데 방법은 아래와 같다. 1234567891011121314151617181920212223var value = 1;const obj = { value: 100, foo() { // this 바인딩(obj)를 변수 that에 할당한다. const that = this; // 콜백 함수 내부에서 this 대신 that을 참조한다. setTimeout(function () { console.log(that.value); // 100 }, 100); // bind를 사용한 방법 // 인수는 함수 외부에서 넣어주는 것이다. setTimeout(function () { console.log(this.value); // 100 }.bind(this), 100); }};obj.foo(); 1.2. 메소드 호출메소드 내부의 this는 메소드를 호출한 객체에 바인딩된다. 12345678const person = { name: 'Choi', getName() { return this.name; // 아래에 메소드를 호출한 객체인 person이 바인딩된다. }};console.log(person.getName()); // Lee 1.3. 생성자 함수 호출생성자 함수 내부의 this는 생성자 함수가 미래에 생성할 인스턴스가 바인딩된다. 123456789101112function Person(name) { this.name = name; // 생성자 함수로 생설할 빈객체(인스턴스)를 가리킨다. this.sayHello = function () { return `안녕하십니까 ${this.name}입니다.`; };}const me = new Person('sungjin');const you = new Person('gyuha');console.log(me.sayHello()); // 안녕하십니까 sungjin입니다.console.log(you.sayHello()); // 안녕하십니까 gyuha입니다. 1.4. call / apply 정적 메소드는 this가 필요없다. 12345678// apply 사용법const arr = [1, 2, 3, 4, 5];// es5Math.max.apply(null, arr);// es6Math.max(...arr); 연습 문제1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192/*1. 짝수와 홀수evenOrOdd 함수는 정수 num을 매개변수로 받는다. num은 1이상의 정수이며, num이 음수인 경우는 없다. num이 짝수일 경우 'Even'을 반환하고 홀수인 경우 'Odd'를 반환하도록 evenOrOdd 함수를 완성하라.단, if문을 사용한 답과 3항 연산자를 사용하는 답 두가지를 제시하여야 한다.*/// if문function evenOrOdd(num) { if (num % 2 === 0) return 'Even'; return 'Odd';}console.log(evenOrOdd(2)); // Evenconsole.log(evenOrOdd(3)); // Oddconsole.log(evenOrOdd(1000)); // Even// 3항 연산자function evenOrOddd(num) { return num % 2 === 0 ? 'Even' : 'Odd';}console.log(evenOrOddd(2)); // Evenconsole.log(evenOrOddd(3)); // Oddconsole.log(evenOrOddd(1000)); // Even/*#2. 1 ~ 10,000의 숫자 중 8이 등장하는 횟수 구하기 (Google)1부터 10,000까지 8이라는 숫자가 총 몇번 나오는가? 이를 구하는 함수를 완성하라.단, 8이 포함되어 있는 숫자의 갯수를 카운팅 하는 것이 아니라 8이라는 숫자를 모두 카운팅 해야 한다. 예를 들어 8808은 3, 8888은 4로 카운팅 해야 한다.(hint) 문자열 중 n번째에 있는 문자 : str.charAt(n) or str[n]*/// 기존 방법// function getCount8() {// let count = 0;// for (let i = 1; i &lt;= 10000; i++) {// const num = i + '';// for (let j = 0; j &lt; num.length; j++) {// if (num[j] === '8') {// count += 1;// }// }// }// return count;// }console.log(getCount8()); // 4000// 강사님 제안function getCount8() { let count = 0; let str = ''; for (let i = 0; i &lt; 10000 + 1; i++) { str += i; } for (let j = 0; j &lt; str.length; j++) { if (str[j] === '8') count += 1; } return count;}console.log(getCount8()); // 4000/*3. 문자열 다루기alphaString46 함수는 문자열 s를 매개변수로 입력받는다. s의 길이가 4 ~ 6이고, 숫자로만 구성되어 있는지 확인하는 alphaString46 함수를 완성하라.예를 들어 s가 'a234'이면 false를 리턴하고 '1234'라면 true를 리턴한다.*/function alphaString46(s) { const result = isNaN(s) === false &amp;&amp; (s.length &gt; 3 &amp;&amp; s.length &lt; 7) ? true : false; return result;}console.log(alphaString46('1234')); // trueconsole.log(alphaString46('9014')); // trueconsole.log(alphaString46('723')); // falseconsole.log(alphaString46('a234')); // falseconsole.log(alphaString46('')); // falseconsole.log(alphaString46()); // false","link":"/2019/05/15/til-20190515/"},{"title":"API사용 연습문제","text":"1. Math.PI양수를 입력받아 이 수를 반지름으로 하는 원의 넓이를 반환하는 함수를 작성하세요. 12345function circleArea(n) { return (n ** 2) * Math.PI;}console.log(circleArea(10)); // 314.1592653589793 2. Math.random두 정수 min, max 를 입력받아, min 이상 max 미만인 임의의 정수를 반환하는 함수를 작성하세요. 1234567function minToMax(min, max) { const sub = max - min; return Math.floor((Math.random() * sub) + min);}console.log(minToMax(2, 8)); // 2 ~ 7 중 랜덤의 수 3. Math.ceil정수를 입력받아, 5 단위로 올림한 수를 반환하는 함수를 작성하세요. 1234567891011121314151617181920212223// 처음 생각한 방법function ceilBy5(n) { const i = 1; while ((n % 5) !== 0) { n += i; } return n;}console.log(ceilBy5(30)); // 30console.log(ceilBy5(32)); // 35console.log(ceilBy5(37)); // 40// 강사님의 의도function ceilby5(num) { return Math.ceil(num / 5) * 5;}console.log(ceilBy5(30)); // 30console.log(ceilBy5(32)); // 35console.log(ceilBy5(37)); // 40 4. toString임의의 HTML 색상 코드를 반환하는 함수를 작성하세요. 12345678910111213141516171819202122232425262728293031323334353637383940414243// 처음 생각한 방법function hexNumber() { return Math.floor(Math.random() * 10);}function hexString() { return String.fromCharCode(Math.floor((Math.random() * 5) + 65));}function random() { return Math.floor(Math.random() * 2);}function htmlHexCode() { let result = '#'; for (let i = 0; i &lt; 6; i++) { const reload = [hexNumber(), hexString()]; result += reload[random()]; } return result;}console.log(htmlHexCode()); // #92F01Aconsole.log(htmlHexCode()); // #00FF12// 강사님의 의도function htmlHexCode() { let result = '#'; for (let i = 0; i &lt; 6; i++) { result += Math.floor(Math.random() * 16).toString(16); } return result.toUpperCase();}console.log(htmlHexCode()); // #92F01Aconsole.log(htmlHexCode()); // #00FF12 5. Math.random() * numberrgb색상코드를 랜덤으로 반환하는 함수를 작성하세요. 1234567891011function randomRgbCode() { function randomNumber() { return Math.floor(Math.random() * 256); } return `rgb(${randomNumber()}, ${randomNumber()}, ${randomNumber()})`;}console.log(randomRgbCode()); // rgb(123, 44, 254);console.log(randomRgbCode()); // rgb(12, 3, 223); 6. String.substring, String.indexOf소수인 숫자와, 자릿수를 받아서 소수를 자리수만큼만 자른 뒤 반환하는 함수를 작성하세요. 123456789function fixFloat(num, a) { const str = num + ''; return str.substring(0, str.indexOf('.') + a + 1);}fixFloat(10.12345, 2); // 10.12fixFloat(15.5678, 1); // 15.5 7. String.replaceCamel case의 문자열을 입력받아, snake case로 바꾼 새 문자열을 반환하는 함수를 작성하세요. 1234567891011121314function camelToSnake(str) { let i = 0; while (str[i] !== str[i].toUpperCase()) { i += 1; } const newStr = str.replace(str[i], `_${str[i]}`); return newStr.toLowerCase();}console.log(camelToSnake('helloWorld')); // 'hello_world'","link":"/2019/05/16/til-20190516/"},{"title":"til_20190517","text":"","link":"/2019/06/07/til-20190517/"},{"title":"til_20190520","text":"","link":"/2019/06/07/til-20190520/"},{"title":"til_20190522","text":"","link":"/2019/06/07/til-20190522/"},{"title":"til_20190523","text":"","link":"/2019/06/07/til-20190523/"},{"title":"til_20190527","text":"","link":"/2019/06/07/til-20190527/"},{"title":"til_20190529","text":"","link":"/2019/06/07/til-20190529/"},{"title":"til_20190531","text":"","link":"/2019/06/07/til-20190531/"},{"title":"til_20190602","text":"","link":"/2019/06/07/til-20190602/"},{"title":"til_20190603","text":"","link":"/2019/06/07/til-20190603/"},{"title":"til_20190605","text":"TEST입니다.이거슨 코드의 테마를 보기위한 test.md입니다. 12345678let a = 1;const b = 2;function add(a, b) { return a + b;}add(a, b); 최성진나이 25살입니다.","link":"/2019/06/05/til-20190605/"}],"tags":[{"name":"TIL","slug":"TIL","link":"/tags/TIL/"},{"name":"Algorithm","slug":"Algorithm","link":"/tags/Algorithm/"},{"name":"JavaScript","slug":"JavaScript","link":"/tags/JavaScript/"},{"name":"HTML","slug":"HTML","link":"/tags/HTML/"},{"name":"CSS","slug":"CSS","link":"/tags/CSS/"},{"name":"웹 사이트","slug":"웹-사이트","link":"/tags/웹-사이트/"},{"name":"웹 표준","slug":"웹-표준","link":"/tags/웹-표준/"},{"name":"웹 접근성","slug":"웹-접근성","link":"/tags/웹-접근성/"},{"name":"linear-gradient","slug":"linear-gradient","link":"/tags/linear-gradient/"},{"name":"white-space","slug":"white-space","link":"/tags/white-space/"},{"name":"가상요소 선택자","slug":"가상요소-선택자","link":"/tags/가상요소-선택자/"},{"name":"애니메이션","slug":"애니메이션","link":"/tags/애니메이션/"},{"name":"시작","slug":"시작","link":"/tags/시작/"},{"name":"연습문제","slug":"연습문제","link":"/tags/연습문제/"},{"name":"this","slug":"this","link":"/tags/this/"},{"name":"Math.PI","slug":"Math-PI","link":"/tags/Math-PI/"},{"name":"Math.random","slug":"Math-random","link":"/tags/Math-random/"},{"name":"Math.ceil","slug":"Math-ceil","link":"/tags/Math-ceil/"},{"name":"toString","slug":"toString","link":"/tags/toString/"},{"name":"String.substring","slug":"String-substring","link":"/tags/String-substring/"},{"name":"String.replace","slug":"String-replace","link":"/tags/String-replace/"},{"name":"String.indexOf","slug":"String-indexOf","link":"/tags/String-indexOf/"}],"categories":[{"name":"TIL","slug":"TIL","link":"/categories/TIL/"},{"name":"Algorithm","slug":"Algorithm","link":"/categories/Algorithm/"},{"name":"JavaScript","slug":"TIL/JavaScript","link":"/categories/TIL/JavaScript/"},{"name":"HTML & CSS","slug":"TIL/JavaScript/HTML-CSS","link":"/categories/TIL/JavaScript/HTML-CSS/"},{"name":"HTML & CSS","slug":"TIL/HTML-CSS","link":"/categories/TIL/HTML-CSS/"},{"name":"컴퓨터공학","slug":"TIL/컴퓨터공학","link":"/categories/TIL/컴퓨터공학/"},{"name":"컴퓨터공학","slug":"TIL/JavaScript/HTML-CSS/컴퓨터공학","link":"/categories/TIL/JavaScript/HTML-CSS/컴퓨터공학/"}]}